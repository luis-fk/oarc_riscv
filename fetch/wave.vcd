$date
	Sun Nov 17 13:00:01 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module fetch_tb $end
$var wire 64 ! PCPlus4F [63:0] $end
$var wire 64 " PCF [63:0] $end
$var wire 32 # InstrF [31:0] $end
$var reg 1 $ PCSrcE $end
$var reg 1 % StallF $end
$var reg 1 & clock $end
$var reg 64 ' pc_target [63:0] $end
$var reg 1 ( reset_pc $end
$scope module uut $end
$var wire 64 ) PCF [63:0] $end
$var wire 64 * PCPlus4F [63:0] $end
$var wire 1 $ PCSrcE $end
$var wire 1 % StallF $end
$var wire 1 & clock $end
$var wire 64 + pc_target [63:0] $end
$var wire 1 ( reset_pc $end
$var wire 64 , s_PCPlus4F [63:0] $end
$var wire 64 - s_PCF_Linha [63:0] $end
$var wire 64 . s_PCF [63:0] $end
$var wire 32 / InstrF [31:0] $end
$scope module PCinstruc $end
$var wire 64 0 d0 [63:0] $end
$var wire 64 1 d1 [63:0] $end
$var wire 1 $ s $end
$var wire 64 2 y [63:0] $end
$upscope $end
$scope module inst_mem $end
$var wire 11 3 address [10:0] $end
$var wire 32 4 read_data [31:0] $end
$upscope $end
$scope module pcreg $end
$var wire 1 & clk $end
$var wire 64 5 d [63:0] $end
$var wire 1 6 en $end
$var wire 1 ( reset $end
$var reg 64 7 q [63:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 7
16
b1 5
b10001100000011 4
b0 3
b1 2
b0 1
b1 0
b10001100000011 /
b0 .
b1 -
b1 ,
b0 +
b1 *
b0 )
1(
b0 '
0&
0%
0$
b10001100000011 #
b0 "
b1 !
$end
#5000
1&
#10000
0&
0(
#15000
b10 -
b10 2
b10 5
b100000000000010000000100011 #
b100000000000010000000100011 /
b100000000000010000000100011 4
b1 3
b10 !
b10 *
b10 ,
b10 0
b1 "
b1 )
b1 .
b1 7
1&
#20000
0&
#25000
b11 -
b11 2
b11 5
b11 #
b11 /
b11 4
b10 3
b11 !
b11 *
b11 ,
b11 0
b10 "
b10 )
b10 .
b10 7
1&
#30000
0&
#35000
b100 -
b100 2
b100 5
b100 #
b100 /
b100 4
b11 3
b100 !
b100 *
b100 ,
b100 0
b11 "
b11 )
b11 .
b11 7
1&
#40000
b10100 -
b10100 2
b10100 5
0&
b10100 '
b10100 +
b10100 1
1$
#45000
b10100 #
b10100 /
b10100 4
b10100 3
b10101 !
b10101 *
b10101 ,
b10101 0
b10100 "
b10100 )
b10100 .
b10100 7
1&
#50000
0&
#55000
1&
#60000
b10101 -
b10101 2
b10101 5
0&
0$
#65000
b10110 -
b10110 2
b10110 5
b10101 #
b10101 /
b10101 4
b10101 3
b10110 !
b10110 *
b10110 ,
b10110 0
b10101 "
b10101 )
b10101 .
b10101 7
1&
#70000
0&
#75000
b10111 -
b10111 2
b10111 5
b10110 #
b10110 /
b10110 4
b10110 3
b10111 !
b10111 *
b10111 ,
b10111 0
b10110 "
b10110 )
b10110 .
b10110 7
1&
#80000
0&
#85000
b11000 -
b11000 2
b11000 5
b10111 #
b10111 /
b10111 4
b10111 3
b11000 !
b11000 *
b11000 ,
b11000 0
b10111 "
b10111 )
b10111 .
b10111 7
1&
#90000
06
0&
1%
#95000
1&
#100000
0&
#105000
1&
#110000
0&
#115000
1&
#120000
16
0&
0%
#125000
b11001 -
b11001 2
b11001 5
b11000 #
b11000 /
b11000 4
b11000 3
b11001 !
b11001 *
b11001 ,
b11001 0
b11000 "
b11000 )
b11000 .
b11000 7
1&
#130000
0&
#135000
b11010 -
b11010 2
b11010 5
b11001 #
b11001 /
b11001 4
b11001 3
b11010 !
b11010 *
b11010 ,
b11010 0
b11001 "
b11001 )
b11001 .
b11001 7
1&
#140000
0&
#145000
b11011 -
b11011 2
b11011 5
b11010 #
b11010 /
b11010 4
b11010 3
b11011 !
b11011 *
b11011 ,
b11011 0
b11010 "
b11010 )
b11010 .
b11010 7
1&
#150000
0&
#155000
b11100 -
b11100 2
b11100 5
b11011 #
b11011 /
b11011 4
b11011 3
b11100 !
b11100 *
b11100 ,
b11100 0
b11011 "
b11011 )
b11011 .
b11011 7
1&
#160000
b1 -
b1 2
b1 5
b10001100000011 #
b10001100000011 /
b10001100000011 4
b0 3
b1 !
b1 *
b1 ,
b1 0
b0 "
b0 )
b0 .
b0 7
0&
1(
#165000
1&
#170000
0&
#175000
1&
#180000
0&
#185000
1&
#190000
0&
#195000
1&
#200000
0&
#205000
1&
#210000
0&
