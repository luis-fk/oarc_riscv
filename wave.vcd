$date
	Sat Nov 30 20:08:30 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module pipelined_riscv_tb $end
$var reg 1 ! clock $end
$var reg 1 " reset_pc $end
$scope module uut $end
$var wire 1 ! clock $end
$var wire 1 " reset_pc $end
$var wire 1 # s_zeroE $end
$var wire 7 $ s_opcode [6:0] $end
$var wire 7 % s_func7 [6:0] $end
$var wire 3 & s_func3 [2:0] $end
$var wire 1 ' s_StallF $end
$var wire 1 ( s_StallD $end
$var wire 5 ) s_Rs2E [4:0] $end
$var wire 5 * s_Rs2D [4:0] $end
$var wire 5 + s_Rs1E [4:0] $end
$var wire 5 , s_Rs1D [4:0] $end
$var wire 2 - s_ResultSrcW [1:0] $end
$var wire 1 . s_ResultSrcEb0 $end
$var wire 1 / s_RegWriteW $end
$var wire 1 0 s_RegWriteM $end
$var wire 5 1 s_RdW [4:0] $end
$var wire 5 2 s_RdM [4:0] $end
$var wire 5 3 s_RdE [4:0] $end
$var wire 1 4 s_PCSrcE $end
$var wire 1 5 s_MemWriteM $end
$var wire 2 6 s_ImmSrcD [1:0] $end
$var wire 2 7 s_ForwardBE [1:0] $end
$var wire 2 8 s_ForwardAE [1:0] $end
$var wire 1 9 s_FlushE $end
$var wire 1 : s_FlushD $end
$var wire 1 ; s_ALUSrcE $end
$var wire 3 < s_ALUControlE [2:0] $end
$scope module cu $end
$var wire 1 4 PCSrcE $end
$var wire 1 ! clock $end
$var wire 1 = funct7b5D $end
$var wire 1 " reset $end
$var wire 7 > opD [6:0] $end
$var wire 3 ? funct3D [2:0] $end
$var wire 1 # ZeroE $end
$var wire 2 @ ResultSrcW [1:0] $end
$var wire 2 A ResultSrcM [1:0] $end
$var wire 1 . ResultSrcEb0 $end
$var wire 2 B ResultSrcE [1:0] $end
$var wire 2 C ResultSrcD [1:0] $end
$var wire 1 / RegWriteW $end
$var wire 1 0 RegWriteM $end
$var wire 1 D RegWriteE $end
$var wire 1 E RegWriteD $end
$var wire 1 5 MemWriteM $end
$var wire 1 F MemWriteE $end
$var wire 1 G MemWriteD $end
$var wire 1 H JumpE $end
$var wire 1 I JumpD $end
$var wire 2 J ImmSrcD [1:0] $end
$var wire 1 9 FlushE $end
$var wire 1 K BranchE $end
$var wire 1 L BranchD $end
$var wire 1 ; ALUSrcBE $end
$var wire 1 M ALUSrcBD $end
$var wire 2 N ALUOpD [1:0] $end
$var wire 3 O ALUControlE [2:0] $end
$var wire 3 P ALUControlD [2:0] $end
$scope module ad $end
$var wire 1 Q RtypeSub $end
$var wire 1 = funct7b5 $end
$var wire 1 R opb5 $end
$var wire 3 S funct3 [2:0] $end
$var wire 2 T ALUOp [1:0] $end
$var reg 3 U ALUControl [2:0] $end
$upscope $end
$scope module controlregE $end
$var wire 1 ! clk $end
$var wire 10 V d [9:0] $end
$var wire 1 " reset $end
$var wire 1 9 clear $end
$var parameter 32 W WIDTH $end
$var reg 10 X q [9:0] $end
$upscope $end
$scope module controlregM $end
$var wire 1 ! clk $end
$var wire 4 Y d [3:0] $end
$var wire 1 " reset $end
$var parameter 32 Z WIDTH $end
$var reg 4 [ q [3:0] $end
$upscope $end
$scope module controlregW $end
$var wire 1 ! clk $end
$var wire 3 \ d [2:0] $end
$var wire 1 " reset $end
$var parameter 32 ] WIDTH $end
$var reg 3 ^ q [2:0] $end
$upscope $end
$scope module md $end
$var wire 7 _ op [6:0] $end
$var wire 2 ` ResultSrc [1:0] $end
$var wire 1 E RegWrite $end
$var wire 1 G MemWrite $end
$var wire 1 I Jump $end
$var wire 2 a ImmSrc [1:0] $end
$var wire 1 L Branch $end
$var wire 1 M ALUSrc $end
$var wire 2 b ALUOp [1:0] $end
$var reg 11 c controls [10:0] $end
$upscope $end
$upscope $end
$scope module fd $end
$var wire 3 d ALUControlE [2:0] $end
$var wire 1 ; ALUSrcE $end
$var wire 2 e ImmSrcD [1:0] $end
$var wire 1 5 MemWriteM $end
$var wire 1 4 PCSrcE $end
$var wire 5 f RdM [4:0] $end
$var wire 5 g RdW [4:0] $end
$var wire 1 / RegWriteW $end
$var wire 2 h ResultSrcW [1:0] $end
$var wire 5 i Rs1D [4:0] $end
$var wire 5 j Rs2D [4:0] $end
$var wire 1 ! clock $end
$var wire 1 " reset_pc $end
$var wire 1 # zeroE $end
$var wire 64 k write_data_execute [63:0] $end
$var wire 5 l reg_destination_src_decode [4:0] $end
$var wire 64 m read_data_memory [63:0] $end
$var wire 64 n read_data2_decode [63:0] $end
$var wire 64 o read_data1_decode [63:0] $end
$var wire 64 p pc_target_execute [63:0] $end
$var wire 64 q pc_plus4_execute [63:0] $end
$var wire 64 r pc_next_instruction_fetch [63:0] $end
$var wire 64 s pc_next_instruction_decode [63:0] $end
$var wire 64 t pc_current_instruction_fetch [63:0] $end
$var wire 64 u pc_current_instruction_decode [63:0] $end
$var wire 7 v opcode [6:0] $end
$var wire 64 w next_instruction_memory [63:0] $end
$var wire 32 x instruction_fetch [31:0] $end
$var wire 64 y imm_extended_decode [63:0] $end
$var wire 7 z func7 [6:0] $end
$var wire 3 { func3 [2:0] $end
$var wire 64 | alu_result_execute [63:0] $end
$var wire 1 ' StallF $end
$var wire 1 ( StallD $end
$var wire 5 } Rs2E [4:0] $end
$var wire 5 ~ Rs2D_wire [4:0] $end
$var wire 5 !" Rs1E [4:0] $end
$var wire 5 "" Rs1D_wire [4:0] $end
$var wire 64 #" ResultW_wire [63:0] $end
$var wire 5 $" RdW_wire [4:0] $end
$var wire 5 %" RdM_wire [4:0] $end
$var wire 5 &" RdE [4:0] $end
$var wire 2 '" ForwardBE [1:0] $end
$var wire 2 (" ForwardAE [1:0] $end
$var wire 1 9 FlushE $end
$var wire 1 : FlushD $end
$var wire 64 )" ALUResultM_wire [63:0] $end
$scope module d $end
$var wire 2 *" ImmSrcD [1:0] $end
$var wire 1 / WriteEnable $end
$var wire 1 ! clock $end
$var wire 1 " reset $end
$var wire 5 +" reg_to_write_src [4:0] $end
$var wire 64 ," read_data2 [63:0] $end
$var wire 64 -" read_data1 [63:0] $end
$var wire 7 ." opcode [6:0] $end
$var wire 7 /" func7 [6:0] $end
$var wire 3 0" func3 [2:0] $end
$var wire 1 ( StallD $end
$var wire 5 1" Rs2D [4:0] $end
$var wire 5 2" Rs1D [4:0] $end
$var wire 64 3" ResultW [63:0] $end
$var wire 5 4" RdD [4:0] $end
$var wire 64 5" PCPlus4F [63:0] $end
$var wire 64 6" PCPlus4D [63:0] $end
$var wire 64 7" PCF [63:0] $end
$var wire 64 8" PCD [63:0] $end
$var wire 32 9" InstrF [31:0] $end
$var wire 32 :" InstrD [31:0] $end
$var wire 64 ;" ImmExtD [63:0] $end
$var wire 1 : FlushD $end
$scope module ExtendMatheus $end
$var wire 2 <" immsrc [1:0] $end
$var wire 32 =" instr [31:0] $end
$var reg 64 >" immext [63:0] $end
$upscope $end
$scope module RegisterFile $end
$var wire 5 ?" Ra [4:0] $end
$var wire 5 @" Rb [4:0] $end
$var wire 1 / We $end
$var wire 1 ! clk $end
$var wire 32 A" load [31:0] $end
$var wire 64 B" doutb [63:0] $end
$var wire 64 C" douta [63:0] $end
$var wire 2048 D" dout [2047:0] $end
$var wire 64 E" din [63:0] $end
$var wire 5 F" Rw [4:0] $end
$var parameter 32 G" BITS $end
$upscope $end
$scope module regD $end
$var wire 1 ! clk $end
$var wire 160 H" d [159:0] $end
$var wire 1 I" en $end
$var wire 1 " reset $end
$var wire 1 : clear $end
$var parameter 32 J" WIDTH $end
$var reg 160 K" q [159:0] $end
$upscope $end
$upscope $end
$scope module e $end
$var wire 3 L" ALUControlE [2:0] $end
$var wire 1 ; ALUSrcE $end
$var wire 64 M" ImmExtD [63:0] $end
$var wire 64 N" PCD [63:0] $end
$var wire 64 O" PCPlus4D [63:0] $end
$var wire 5 P" RdD [4:0] $end
$var wire 5 Q" Rs1D [4:0] $end
$var wire 5 R" Rs2D [4:0] $end
$var wire 1 ! clock $end
$var wire 64 S" read_data1 [63:0] $end
$var wire 64 T" read_data2 [63:0] $end
$var wire 1 " reset $end
$var wire 1 # zeroE $end
$var wire 64 U" src_b [63:0] $end
$var wire 64 V" WriteDataE [63:0] $end
$var wire 64 W" SrcAE_wire [63:0] $end
$var wire 5 X" Rs2E [4:0] $end
$var wire 5 Y" Rs1E [4:0] $end
$var wire 64 Z" ResultW [63:0] $end
$var wire 5 [" RdE [4:0] $end
$var wire 64 \" RD2E [63:0] $end
$var wire 64 ]" RD1E [63:0] $end
$var wire 64 ^" PCTargetE [63:0] $end
$var wire 64 _" PCPlus4E [63:0] $end
$var wire 64 `" PCE [63:0] $end
$var wire 64 a" ImmExtE [63:0] $end
$var wire 2 b" ForwardBE [1:0] $end
$var wire 2 c" ForwardAE [1:0] $end
$var wire 1 9 FlushE $end
$var wire 64 d" ALUResultM [63:0] $end
$var wire 64 e" ALUResultE [63:0] $end
$scope module ULA $end
$var wire 3 f" ALUControl [2:0] $end
$var wire 1 # ZeroE $end
$var wire 64 g" SrcB [63:0] $end
$var wire 64 h" SrcA [63:0] $end
$var reg 64 i" ALUResult [63:0] $end
$upscope $end
$scope module faemux $end
$var wire 64 j" d0 [63:0] $end
$var wire 2 k" s [1:0] $end
$var wire 64 l" d2 [63:0] $end
$var wire 64 m" d1 [63:0] $end
$var parameter 32 n" WIDTH $end
$var reg 64 o" y [63:0] $end
$upscope $end
$scope module fbemux $end
$var wire 64 p" d0 [63:0] $end
$var wire 2 q" s [1:0] $end
$var wire 64 r" d2 [63:0] $end
$var wire 64 s" d1 [63:0] $end
$var parameter 32 t" WIDTH $end
$var reg 64 u" y [63:0] $end
$upscope $end
$scope module regE $end
$var wire 1 ! clk $end
$var wire 335 v" d [334:0] $end
$var wire 1 " reset $end
$var wire 1 9 clear $end
$var parameter 32 w" WIDTH $end
$var reg 335 x" q [334:0] $end
$upscope $end
$scope module srcbmux $end
$var wire 64 y" d0 [63:0] $end
$var wire 64 z" d1 [63:0] $end
$var wire 1 ; s $end
$var wire 64 {" y [63:0] $end
$var parameter 32 |" WIDTH $end
$upscope $end
$upscope $end
$scope module f $end
$var wire 64 }" PCF [63:0] $end
$var wire 64 ~" PCPlus4F [63:0] $end
$var wire 1 4 PCSrcE $end
$var wire 1 ! clock $end
$var wire 64 !# pc_target [63:0] $end
$var wire 1 " reset_pc $end
$var wire 64 "# s_PCPlus4F [63:0] $end
$var wire 64 ## s_PCF_Linha [63:0] $end
$var wire 64 $# s_PCF [63:0] $end
$var wire 1 ' StallF $end
$var wire 32 %# InstrF [31:0] $end
$scope module PCinstruc $end
$var wire 64 &# d0 [63:0] $end
$var wire 64 '# d1 [63:0] $end
$var wire 1 4 s $end
$var wire 64 (# y [63:0] $end
$var parameter 32 )# WIDTH $end
$upscope $end
$scope module inst_mem $end
$var wire 11 *# address [10:0] $end
$var wire 32 +# read_data [31:0] $end
$upscope $end
$scope module pcreg $end
$var wire 1 ! clk $end
$var wire 64 ,# d [63:0] $end
$var wire 1 -# en $end
$var wire 1 " reset $end
$var parameter 32 .# WIDTH $end
$var reg 64 /# q [63:0] $end
$upscope $end
$upscope $end
$scope module m $end
$var wire 64 0# ALUResultE [63:0] $end
$var wire 1 5 MemWriteM $end
$var wire 64 1# PCPlus4E [63:0] $end
$var wire 5 2# RdE [4:0] $end
$var wire 64 3# WriteDataE [63:0] $end
$var wire 1 ! clock $end
$var wire 1 " reset $end
$var wire 64 4# WriteDataM [63:0] $end
$var wire 5 5# RdM [4:0] $end
$var wire 64 6# RD_Memory [63:0] $end
$var wire 64 7# PCPlus4M [63:0] $end
$var wire 64 8# ALUResultM [63:0] $end
$scope module data_mem $end
$var wire 1 ! clk $end
$var wire 64 9# endereco [63:0] $end
$var wire 1 5 mem_write $end
$var wire 64 :# write_data [63:0] $end
$var wire 64 ;# read_data [63:0] $end
$upscope $end
$scope module regM $end
$var wire 1 ! clk $end
$var wire 197 <# d [196:0] $end
$var wire 1 " reset $end
$var parameter 32 =# WIDTH $end
$var reg 197 ># q [196:0] $end
$upscope $end
$upscope $end
$scope module wb $end
$var wire 64 ?# ALUResultM [63:0] $end
$var wire 64 @# PCPlus4M [63:0] $end
$var wire 5 A# RdM [4:0] $end
$var wire 64 B# ReadDataM [63:0] $end
$var wire 2 C# ResultSrcW [1:0] $end
$var wire 1 ! clock $end
$var wire 1 " reset $end
$var wire 64 D# ResultW [63:0] $end
$var wire 64 E# ReadDataW [63:0] $end
$var wire 5 F# RdW [4:0] $end
$var wire 64 G# PCPlus4W [63:0] $end
$var wire 64 H# ALUResultW [63:0] $end
$scope module regM $end
$var wire 1 ! clk $end
$var wire 197 I# d [196:0] $end
$var wire 1 " reset $end
$var parameter 32 J# WIDTH $end
$var reg 197 K# q [196:0] $end
$upscope $end
$scope module resultmux $end
$var wire 64 L# d0 [63:0] $end
$var wire 64 M# d1 [63:0] $end
$var wire 64 N# d2 [63:0] $end
$var wire 2 O# s [1:0] $end
$var parameter 32 P# WIDTH $end
$var reg 64 Q# y [63:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module hu $end
$var wire 1 : FlushD $end
$var wire 1 9 FlushE $end
$var wire 1 4 PCSrcE $end
$var wire 5 R# RdE [4:0] $end
$var wire 5 S# RdM [4:0] $end
$var wire 5 T# RdW [4:0] $end
$var wire 1 0 RegWriteM $end
$var wire 1 / RegWriteW $end
$var wire 1 . ResultSrcEb0 $end
$var wire 5 U# Rs1D [4:0] $end
$var wire 5 V# Rs1E [4:0] $end
$var wire 5 W# Rs2D [4:0] $end
$var wire 5 X# Rs2E [4:0] $end
$var wire 1 ( StallD $end
$var wire 1 ' StallF $end
$var wire 1 Y# lwStallD $end
$var reg 2 Z# ForwardAE [1:0] $end
$var reg 2 [# ForwardBE [1:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1000000 P#
b11000101 J#
b11000101 =#
b1000000 .#
b1000000 )#
b1000000 |"
b101001111 w"
b1000000 t"
b1000000 n"
b10100000 J"
b1000000 G"
b11 ]
b100 Z
b1010 W
$end
#0
$dumpvars
b0 [#
b0 Z#
0Y#
b0 X#
b0 W#
b0 V#
b0 U#
b0 T#
b0 S#
b0 R#
b0 Q#
b0 O#
b0 N#
b0 M#
b0 L#
b0 K#
b1000000000000000000000000000000000000000000000000000000000000000000000000 I#
b0 H#
b0 G#
b0 F#
b0 E#
b0 D#
b0 C#
b1000 B#
b0 A#
b0 @#
b0 ?#
b0 >#
b0 <#
b1000 ;#
b0 :#
b0 9#
b0 8#
b0 7#
b1000 6#
b0 5#
b0 4#
b0 3#
b0 2#
b0 1#
b0 0#
b0 /#
1-#
b1 ,#
b10001100000011 +#
b0 *#
b1 (#
bx '#
b1 &#
b10001100000011 %#
b0 $#
b1 ##
b1 "#
bx !#
b1 ~"
b0 }"
b0 {"
b0 z"
b0 y"
b0 x"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0000000000000000000000000000000000000000000000000000000000000000 v"
b0 u"
b0 s"
b0 r"
b0 q"
b0 p"
b0 o"
b0 m"
b0 l"
b0 k"
b0 j"
b0 i"
b0 h"
b0 g"
b0 f"
b0 e"
b0 d"
b0 c"
b0 b"
b0 a"
b0 `"
b0 _"
bx ^"
b0 ]"
b0 \"
b0 ["
b0 Z"
b0 Y"
b0 X"
b0 W"
b0 V"
b0 U"
b0 T"
b0 S"
b0 R"
b0 Q"
b0 P"
b0 O"
b0 N"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx M"
b0 L"
b0 K"
1I"
b1000110000001100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001 H"
b0 F"
b0 E"
bx0000000000000000000000000000000000000000000000000000000000000000 D"
b0 C"
b0 B"
b0 A"
b0 @"
b0 ?"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx >"
b0 ="
bx <"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ;"
b0 :"
b10001100000011 9"
b0 8"
b0 7"
b0 6"
b1 5"
b0 4"
b0 3"
b0 2"
b0 1"
b0 0"
b0 /"
b0 ."
b0 -"
b0 ,"
b0 +"
bx *"
b0 )"
b0 ("
b0 '"
b0 &"
b0 %"
b0 $"
b0 #"
b0 ""
b0 !"
b0 ~
b0 }
b0 |
b0 {
b0 z
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx y
b10001100000011 x
b0 w
b0 v
b0 u
b0 t
b0 s
b1 r
b0 q
bx p
b0 o
b0 n
b1000 m
b0 l
b0 k
b0 j
b0 i
b0 h
b0 g
b0 f
bx e
b0 d
bx c
bx b
bx a
bx `
b0 _
b0 ^
b0 \
b0 [
b0 Y
b0 X
bx000x V
b0 U
bx T
b0 S
0R
0Q
b0 P
b0 O
bx N
xM
xL
0K
bx J
xI
0H
xG
0F
xE
0D
bx C
b0 B
b0 A
b0 @
b0 ?
b0 >
0=
b0 <
0;
0:
09
b0 8
b0 7
bx 6
05
04
b0 3
b0 2
b0 1
00
0/
0.
b0 -
b0 ,
b0 +
b0 *
b0 )
0(
0'
b0 &
b0 %
b0 $
0#
1"
0!
$end
#5
1!
#10
0!
#15
1!
#20
0!
#25
1!
#30
0!
#35
1!
#40
0!
#45
1!
#50
0!
#55
1!
#60
0!
#65
1!
#70
0!
#75
1!
#80
0!
#85
1!
#90
0!
#95
1!
#100
0!
0"
#105
b0 p
b0 ^"
b0 !#
b0 '#
b0 y
b0 ;"
b0 >"
b0 M"
xI"
x-#
1E
b0 6
b0 J
b0 a
b0 e
b0 *"
b0 <"
1M
0G
b1 C
b1 `
0L
b0 N
b0 T
b0 b
0I
bx0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 <#
bx |
bx e"
bx i"
bx 0#
x9
x(
x'
xY#
b1010000001 V
b0 P
b0 U
b10010010000 c
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx U"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx g"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {"
x:
x4
x.
b10 &
b10 ?
b10 S
b10 {
b10 0"
b11 $
b11 >
b11 _
b11 v
b11 ."
b110 l
b110 4"
b110 P"
x;
xK
xH
xF
bx B
bx Y
xD
b1000 E#
b1000 M#
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx a"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx z"
b11000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001 v"
b1 s
b1 6"
b1 O"
b10001100000011 :"
b10001100000011 ="
b0x0 ##
b0x0 (#
b0x0 ,#
b10001110000011 x
b10001110000011 9"
b10001110000011 %#
b10001110000011 +#
b1 *#
bx000x X
b1000000000000000000000000000000000000000000000000000000000000000000000000 K#
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0000000000000000000000000000000000000000000000000000000000000000 x"
b1000110000001100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001 K"
b10 r
b10 5"
b10 ~"
b10 "#
b10 &#
b1000111000001100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000010 H"
b1 t
b1 7"
b1 }"
b1 $#
b1 /#
1!
#110
0!
#115
1I"
1-#
b0 |
b0 e"
b0 i"
b0 0#
b10 ##
b10 (#
b10 ,#
09
0(
0'
0Y#
b0 U"
b0 g"
b0 {"
0:
04
1.
b1 q
b1 _"
b1 1#
b0 a"
b0 z"
b1100000000000000000000000000000000000000000000000000000000000000001 <#
b110 3
b110 &"
b110 ["
b110 2#
b110 R#
bx m
bx 6#
bx ;#
bx B#
bx000000000000000000000000000000000000000000000000000000000000000000000 I#
bx )"
bx d"
bx l"
bx r"
bx 8#
bx 9#
bx ?#
1;
0K
0H
0F
b1 B
b1010 Y
1D
x5
bx A
bx \
x0
b11000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001 x"
bx0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 >#
b1010000001 X
bx [
1!
#120
0!
#125
b0x A"
bx #"
bx 3"
bx E"
bx Z"
bx m"
bx s"
bx D#
bx Q#
b111 l
b111 4"
b111 P"
bx -
bx @
bx h
bx C#
bx O#
x/
05
b1 A
b101 \
10
bx E#
bx M#
bx H#
bx L#
b1 w
b1 7#
b1 @#
b110 2
b110 f
b110 S#
b110 %"
b110 5#
b110 A#
b1000 m
b1000 6#
b1000 ;#
b1000 B#
b1000001100000000000000000000000000000000000000000000000000000000000000001 I#
b0 )"
b0 d"
b0 l"
b0 r"
b0 8#
b0 9#
b0 ?#
b10 s
b10 6"
b10 O"
b100000000000011100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010 v"
b1 u
b1 8"
b1 N"
b10001110000011 :"
b10001110000011 ="
b11 ##
b11 (#
b11 ,#
b100000000000010000000100011 x
b100000000000010000000100011 9"
b100000000000010000000100011 %#
b100000000000010000000100011 +#
b10 *#
bx ^
b1010 [
bx000000000000000000000000000000000000000000000000000000000000000000000 K#
b1100000000000000000000000000000000000000000000000000000000000000001 >#
b1000111000001100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000010 K"
b11 r
b11 5"
b11 ~"
b11 "#
b11 &#
b10000000000001000000010001100000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000011 H"
b10 t
b10 7"
b10 }"
b10 $#
b10 /#
1!
#130
0!
#135
0E
b1 6
b1 J
b1 a
b1 e
b1 *"
b1 <"
1G
b1000001 V
b0 C
b0 `
1R
b111000000 c
b1000000 y
b1000000 ;"
b1000000 >"
b1000000 M"
b10 %
b10 z
b10 /"
b100011 $
b100011 >
b100011 _
b100011 v
b100011 ."
b0 l
b0 4"
b0 P"
b1000 #"
b1000 3"
b1000 E"
b1000 Z"
b1000 m"
b1000 s"
b1000 D#
b1000 Q#
b1000000 A"
b100 ##
b100 (#
b100 ,#
b100 x
b100 9"
b100 %#
b100 +#
b11 *#
b11 s
b11 6"
b11 O"
b1000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000011 v"
b10 u
b10 8"
b10 N"
b100000000000010000000100011 :"
b100000000000010000000100011 ="
b10 q
b10 _"
b10 1#
b1110000000000000000000000000000000000000000000000000000000000000010 <#
b111 3
b111 &"
b111 ["
b111 2#
b111 R#
b1000001 p
b1000001 ^"
b1000001 !#
b1000001 '#
b1 `"
b1 G#
b1 N#
b110 1
b110 g
b110 T#
b110 $"
b110 +"
b110 F"
b110 F#
b1000 E#
b1000 M#
b0 H#
b0 L#
b1 -
b1 @
b1 h
b1 C#
b1 O#
1/
b100 r
b100 5"
b100 ~"
b100 "#
b100 &#
b10000000000000000000000000000000000000000000000000000000000000000110000000000000000000000000000000000000000000000000000000000000100 H"
b11 t
b11 7"
b11 }"
b11 $#
b11 /#
b10000000000001000000010001100000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000011 K"
b100000000000011100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010 x"
b1000001100000000000000000000000000000000000000000000000000000000000000001 K#
b101 ^
1!
#140
0!
#145
xE
bx 6
bx J
bx a
bx e
bx *"
bx <"
xM
xG
bx C
bx `
xL
bx N
bx T
bx b
bx000x V
xI
b1000000 |
b1000000 e"
b1000000 i"
b1000000 0#
0R
bx c
0.
b1000000 U"
b1000000 g"
b1000000 {"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx y
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ;"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx >"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx M"
b0 %
b0 z
b0 /"
b0 &
b0 ?
b0 S
b0 {
b0 0"
b100 $
b100 >
b100 _
b100 v
b100 ."
1F
b0 B
b1 Y
0D
b10 w
b10 7#
b10 @#
b1000001110000000000000000000000000000000000000000000000000000000000000010 I#
b111 2
b111 f
b111 S#
b111 %"
b111 5#
b111 A#
b11 q
b11 _"
b11 1#
b1000000 a"
b1000000 z"
b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011 <#
b0 3
b0 &"
b0 ["
b0 2#
b0 R#
bx p
bx ^"
bx !#
bx '#
b10 `"
b100 s
b100 6"
b100 O"
b1100000000000000000000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0000000000000000000000000000000000000000000000000000000000000100 v"
b11 u
b11 8"
b11 N"
b100 :"
b100 ="
b101 ##
b101 (#
b101 ,#
b101 x
b101 9"
b101 %#
b101 +#
b100 *#
b1000001 X
b1110000000000000000000000000000000000000000000000000000000000000010 >#
b1000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000011 x"
b10000000000000000000000000000000000000000000000000000000000000000110000000000000000000000000000000000000000000000000000000000000100 K"
b101 r
b101 5"
b101 ~"
b101 "#
b101 &#
b10100000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000101 H"
b100 t
b100 7"
b100 }"
b100 $#
b100 /#
bx0000000000000000000000000000000000000000000000000000000000001000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0000000000000000000000000000000000000000000000000000000000000000 D"
1!
#150
0!
#155
xI"
x-#
bx |
bx e"
bx i"
bx 0#
x9
x(
x'
xY#
b101 $
b101 >
b101 _
b101 v
b101 ."
b10000000 A"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx U"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx g"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {"
x:
x4
x.
bx ##
bx (#
bx ,#
b110 x
b110 9"
b110 %#
b110 +#
b101 *#
b101 s
b101 6"
b101 O"
b10000000000000000000000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0000000000000000000000000000000000000000000000000000000000000101 v"
b100 u
b100 8"
b100 N"
b101 :"
b101 ="
bx0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100 <#
b100 q
b100 _"
b100 1#
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx a"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx z"
b11 `"
b11 w
b11 7#
b11 @#
b0 2
b0 f
b0 S#
b0 %"
b0 5#
b0 A#
bx m
bx 6#
bx ;#
bx B#
b1000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000000000000000000000000000000000000000000000000000000000000000000011 I#
b1000000 )"
b1000000 d"
b1000000 l"
b1000000 r"
b1000000 8#
b1000000 9#
b1000000 ?#
b10 G#
b10 N#
b111 1
b111 g
b111 T#
b111 $"
b111 +"
b111 F"
b111 F#
x;
xK
xH
xF
bx B
bx Y
xD
15
b0 A
b0 \
00
b110 r
b110 5"
b110 ~"
b110 "#
b110 &#
b11000000000000000000000000000000000000000000000000000000000000001010000000000000000000000000000000000000000000000000000000000000110 H"
b101 t
b101 7"
b101 }"
b101 $#
b101 /#
b10100000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000101 K"
b1100000000000000000000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0000000000000000000000000000000000000000000000000000000000000100 x"
b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011 >#
b1000001110000000000000000000000000000000000000000000000000000000000000010 K#
bx000x X
b1 [
1!
#160
0!
#165
b0 A"
b1000000 #"
b1000000 3"
b1000000 E"
b1000000 Z"
b1000000 m"
b1000000 s"
b1000000 D#
b1000000 Q#
b0 -
b0 @
b0 h
b0 C#
b0 O#
0/
x5
bx A
bx \
x0
b11 G#
b11 N#
b0 1
b0 g
b0 T#
b0 $"
b0 +"
b0 F"
b0 F#
bx E#
bx M#
b1000000 H#
b1000000 L#
b100 w
b100 7#
b100 @#
bx )"
bx d"
bx l"
bx r"
bx 8#
bx 9#
bx ?#
bx0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101 <#
b101 q
b101 _"
b101 1#
b100 `"
b0 ^
bx [
b1000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000000000000000000000000000000000000000000000000000000000000000000011 K#
bx0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100 >#
b10000000000000000000000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0000000000000000000000000000000000000000000000000000000000000101 x"
bx00000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0000000000000000000000000000000000000000000000000000000000000000 D"
bx000000000000000000000000000000000000000000000000000000000000000000100 I#
bx m
bx 6#
bx ;#
bx B#
1!
#170
0!
#175
bx #"
bx 3"
bx E"
bx Z"
bx m"
bx s"
bx D#
bx Q#
b0x A"
bx000000000000000000000000000000000000000000000000000000000000000000101 I#
b101 w
b101 7#
b101 @#
b100 G#
b100 N#
bx H#
bx L#
bx -
bx @
bx h
bx C#
bx O#
x/
bx0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101 >#
bx000000000000000000000000000000000000000000000000000000000000000000100 K#
bx ^
1!
#180
0!
#185
b101 G#
b101 N#
bx000000000000000000000000000000000000000000000000000000000000000000101 K#
1!
#190
0!
#195
1!
#200
0!
#205
1!
#210
0!
#215
1!
#220
0!
#225
1!
#230
0!
#235
1!
#240
0!
#245
1!
#250
0!
#255
1!
#260
0!
#265
1!
#270
0!
#275
1!
#280
0!
#285
1!
#290
0!
#295
1!
#300
0!
#305
1!
#310
0!
#315
1!
#320
0!
#325
1!
#330
0!
#335
1!
#340
0!
#345
1!
#350
0!
#355
1!
#360
0!
#365
1!
#370
0!
#375
1!
#380
0!
#385
1!
#390
0!
#395
1!
#400
0!
#405
1!
#410
0!
#415
1!
#420
0!
#425
1!
#430
0!
#435
1!
#440
0!
#445
1!
#450
0!
#455
1!
#460
0!
#465
1!
#470
0!
#475
1!
#480
0!
#485
1!
#490
0!
#495
1!
#500
0!
#505
1!
#510
0!
#515
1!
#520
0!
#525
1!
#530
0!
#535
1!
#540
0!
#545
1!
#550
0!
#555
1!
#560
0!
#565
1!
#570
0!
#575
1!
#580
0!
#585
1!
#590
0!
#595
1!
#600
0!
#605
1!
#610
0!
#615
1!
#620
0!
#625
1!
#630
0!
#635
1!
#640
0!
#645
1!
#650
0!
#655
1!
#660
0!
#665
1!
#670
0!
#675
1!
#680
0!
#685
1!
#690
0!
#695
1!
#700
0!
#705
1!
#710
0!
#715
1!
#720
0!
#725
1!
#730
0!
#735
1!
#740
0!
#745
1!
#750
0!
#755
1!
#760
0!
#765
1!
#770
0!
#775
1!
#780
0!
#785
1!
#790
0!
#795
1!
#800
0!
#805
1!
#810
0!
#815
1!
#820
0!
#825
1!
#830
0!
#835
1!
#840
0!
#845
1!
#850
0!
#855
1!
#860
0!
#865
1!
#870
0!
#875
1!
#880
0!
#885
1!
#890
0!
#895
1!
#900
0!
#905
1!
#910
0!
#915
1!
#920
0!
#925
1!
#930
0!
#935
1!
#940
0!
#945
1!
#950
0!
#955
1!
#960
0!
#965
1!
#970
0!
#975
1!
#980
0!
#985
1!
#990
0!
#995
1!
#1000
0!
#1005
1!
#1010
0!
#1015
1!
#1020
0!
#1025
1!
#1030
0!
#1035
1!
#1040
0!
#1045
1!
#1050
0!
#1055
1!
#1060
0!
#1065
1!
#1070
0!
#1075
1!
#1080
0!
#1085
1!
#1090
0!
#1095
1!
#1100
0!
#1105
1!
#1110
0!
#1115
1!
#1120
0!
#1125
1!
#1130
0!
#1135
1!
#1140
0!
#1145
1!
#1150
0!
#1155
1!
#1160
0!
#1165
1!
#1170
0!
#1175
1!
#1180
0!
#1185
1!
#1190
0!
#1195
1!
#1200
0!
#1205
1!
#1210
0!
#1215
1!
#1220
0!
#1225
1!
#1230
0!
#1235
1!
#1240
0!
#1245
1!
#1250
0!
#1255
1!
#1260
0!
#1265
1!
#1270
0!
#1275
1!
#1280
0!
#1285
1!
#1290
0!
#1295
1!
#1300
0!
#1305
1!
#1310
0!
#1315
1!
#1320
0!
#1325
1!
#1330
0!
#1335
1!
#1340
0!
#1345
1!
#1350
0!
#1355
1!
#1360
0!
#1365
1!
#1370
0!
#1375
1!
#1380
0!
#1385
1!
#1390
0!
#1395
1!
#1400
0!
#1405
1!
#1410
0!
#1415
1!
#1420
0!
#1425
1!
#1430
0!
#1435
1!
#1440
0!
#1445
1!
#1450
0!
#1455
1!
#1460
0!
#1465
1!
#1470
0!
#1475
1!
#1480
0!
#1485
1!
#1490
0!
#1495
1!
#1500
0!
#1505
1!
#1510
0!
#1515
1!
#1520
0!
#1525
1!
#1530
0!
#1535
1!
#1540
0!
#1545
1!
#1550
0!
#1555
1!
#1560
0!
#1565
1!
#1570
0!
#1575
1!
#1580
0!
#1585
1!
#1590
0!
#1595
1!
#1600
0!
#1605
1!
#1610
0!
#1615
1!
#1620
0!
#1625
1!
#1630
0!
#1635
1!
#1640
0!
#1645
1!
#1650
0!
#1655
1!
#1660
0!
#1665
1!
#1670
0!
#1675
1!
#1680
0!
#1685
1!
#1690
0!
#1695
1!
#1700
0!
#1705
1!
#1710
0!
#1715
1!
#1720
0!
#1725
1!
#1730
0!
#1735
1!
#1740
0!
#1745
1!
#1750
0!
#1755
1!
#1760
0!
#1765
1!
#1770
0!
#1775
1!
#1780
0!
#1785
1!
#1790
0!
#1795
1!
#1800
0!
#1805
1!
#1810
0!
#1815
1!
#1820
0!
#1825
1!
#1830
0!
#1835
1!
#1840
0!
#1845
1!
#1850
0!
#1855
1!
#1860
0!
#1865
1!
#1870
0!
#1875
1!
#1880
0!
#1885
1!
#1890
0!
#1895
1!
#1900
0!
#1905
1!
#1910
0!
#1915
1!
#1920
0!
#1925
1!
#1930
0!
#1935
1!
#1940
0!
#1945
1!
#1950
0!
#1955
1!
#1960
0!
#1965
1!
#1970
0!
#1975
1!
#1980
0!
#1985
1!
#1990
0!
#1995
1!
#2000
0!
#2005
1!
#2010
0!
#2015
1!
#2020
0!
#2025
1!
#2030
0!
#2035
1!
#2040
0!
#2045
1!
#2050
0!
#2055
1!
#2060
0!
#2065
1!
#2070
0!
#2075
1!
#2080
0!
#2085
1!
#2090
0!
#2095
1!
#2100
0!
