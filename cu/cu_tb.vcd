$date
	Thu Nov 14 20:51:51 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module cu_tb $end
$var wire 2 ! ResultSrc [1:0] $end
$var wire 1 " RegWrite $end
$var wire 1 # PCSrc $end
$var wire 1 $ MemWrite $end
$var wire 1 % Jump $end
$var wire 2 & ImmSrc [1:0] $end
$var wire 1 ' Branch $end
$var wire 1 ( ALUSrc $end
$var wire 3 ) ALUControl [2:0] $end
$var reg 1 * Zero $end
$var reg 3 + funct3 [2:0] $end
$var reg 1 , funct7b5 $end
$var reg 7 - op [6:0] $end
$scope module uut $end
$var wire 1 # PCSrc $end
$var wire 1 * Zero $end
$var wire 3 . funct3 [2:0] $end
$var wire 1 , funct7b5 $end
$var wire 7 / op [6:0] $end
$var wire 2 0 ResultSrc [1:0] $end
$var wire 1 " RegWrite $end
$var wire 1 $ MemWrite $end
$var wire 1 % Jump $end
$var wire 2 1 ImmSrc [1:0] $end
$var wire 1 ' Branch $end
$var wire 1 ( ALUSrc $end
$var wire 2 2 ALUOp [1:0] $end
$var wire 3 3 ALUControl [2:0] $end
$scope module ad $end
$var wire 1 4 RtypeSub $end
$var wire 3 5 funct3 [2:0] $end
$var wire 1 , funct7b5 $end
$var wire 1 6 opb5 $end
$var wire 2 7 ALUOp [1:0] $end
$var reg 3 8 ALUControl [2:0] $end
$upscope $end
$scope module md $end
$var wire 7 9 op [6:0] $end
$var wire 2 : ResultSrc [1:0] $end
$var wire 1 " RegWrite $end
$var wire 1 $ MemWrite $end
$var wire 1 % Jump $end
$var wire 2 ; ImmSrc [1:0] $end
$var wire 1 ' Branch $end
$var wire 1 ( ALUSrc $end
$var wire 2 < ALUOp [1:0] $end
$var reg 11 = controls [10:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1xx00000100 =
b10 <
bx ;
b0 :
b110011 9
b0 8
b10 7
16
b0 5
04
b0 3
b10 2
bx 1
b0 0
b110011 /
b0 .
b110011 -
0,
b0 +
0*
b0 )
0(
0'
bx &
0%
0$
0#
1"
b0 !
$end
#10
b0 &
b0 1
b0 ;
1(
06
b10010000100 =
b10011 -
b10011 /
b10011 9
#20
0"
b1 &
b1 1
b1 ;
1$
b0 2
b0 7
b0 <
b0 )
b0 3
b0 8
16
b111000000 =
b10 +
b10 .
b10 5
b100011 -
b100011 /
b100011 9
#30
b11 )
b11 3
b11 8
1#
b10 &
b10 1
b10 ;
0(
0$
1'
b1 2
b1 7
b1 <
b1000001010 =
1*
b0 +
b0 .
b0 5
b1100011 -
b1100011 /
b1100011 9
#40
0#
b0 )
b0 3
b0 8
1"
b11 &
b11 1
b11 ;
b10 !
b10 0
b10 :
0'
b0 2
b0 7
b0 <
1%
b11100100001 =
b1101111 -
b1101111 /
b1101111 9
#50
b1 )
b1 3
b1 8
bx &
bx 1
bx ;
b0 !
b0 0
b0 :
b10 2
b10 7
b10 <
0%
14
b1xx00000100 =
1,
b110011 -
b110011 /
b110011 9
#60
